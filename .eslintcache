[{"F:\\CourseraR\\React\\confusion\\src\\reportWebVitals.js":"1","F:\\CourseraR\\React\\confusion\\src\\index.js":"2","F:\\CourseraR\\React\\confusion\\src\\App.js":"3","F:\\CourseraR\\React\\confusion\\src\\components\\MenuComponent.js":"4","F:\\CourseraR\\React\\confusion\\src\\shared\\dishes.js":"5","F:\\CourseraR\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","F:\\CourseraR\\React\\confusion\\src\\components\\MainComponent.js":"7","F:\\CourseraR\\React\\confusion\\src\\components\\HeaderComponent.js":"8","F:\\CourseraR\\React\\confusion\\src\\components\\FooterComponent.js":"9","F:\\CourseraR\\React\\confusion\\src\\components\\HomeComponent.js":"10","F:\\CourseraR\\React\\confusion\\src\\shared\\leaders.js":"11","F:\\CourseraR\\React\\confusion\\src\\components\\ContactComponent.js":"12","F:\\CourseraR\\React\\confusion\\src\\components\\AboutComponent.js":"13","F:\\CourseraR\\React\\confusion\\src\\redux\\configureStore.js":"14","F:\\CourseraR\\React\\confusion\\src\\redux\\leaders.js":"15","F:\\CourseraR\\React\\confusion\\src\\redux\\comments.js":"16","F:\\CourseraR\\React\\confusion\\src\\redux\\dishes.js":"17","F:\\CourseraR\\React\\confusion\\src\\redux\\promotions.js":"18","F:\\CourseraR\\React\\confusion\\src\\redux\\ActionTypes.js":"19","F:\\CourseraR\\React\\confusion\\src\\redux\\ActionCreators.js":"20","F:\\CourseraR\\React\\confusion\\src\\redux\\forms.js":"21","F:\\CourseraR\\React\\confusion\\src\\shared\\baseUrl.js":"22","F:\\CourseraR\\React\\confusion\\src\\components\\LoadingComponent.js":"23"},{"size":362,"mtime":1606953792519,"results":"24","hashOfConfig":"25"},{"size":639,"mtime":1607463617051,"results":"26","hashOfConfig":"25"},{"size":536,"mtime":1607728320387,"results":"27","hashOfConfig":"25"},{"size":1637,"mtime":1609795379525,"results":"28","hashOfConfig":"25"},{"size":1490,"mtime":1607548619444,"results":"29","hashOfConfig":"25"},{"size":7184,"mtime":1609795347391,"results":"30","hashOfConfig":"25"},{"size":3920,"mtime":1609794380231,"results":"31","hashOfConfig":"25"},{"size":4616,"mtime":1607722939837,"results":"32","hashOfConfig":"25"},{"size":2633,"mtime":1607470919182,"results":"33","hashOfConfig":"25"},{"size":1592,"mtime":1608330404512,"results":"34","hashOfConfig":"25"},{"size":2382,"mtime":1607548821301,"results":"35","hashOfConfig":"25"},{"size":10343,"mtime":1609794643052,"results":"36","hashOfConfig":"25"},{"size":5385,"mtime":1609723072147,"results":"37","hashOfConfig":"25"},{"size":792,"mtime":1608157462018,"results":"38","hashOfConfig":"25"},{"size":605,"mtime":1609721753203,"results":"39","hashOfConfig":"25"},{"size":640,"mtime":1608316422763,"results":"40","hashOfConfig":"25"},{"size":584,"mtime":1608149304582,"results":"41","hashOfConfig":"25"},{"size":615,"mtime":1608246527852,"results":"42","hashOfConfig":"25"},{"size":607,"mtime":1609716616536,"results":"43","hashOfConfig":"25"},{"size":6027,"mtime":1609794872490,"results":"44","hashOfConfig":"25"},{"size":149,"mtime":1608157384810,"results":"45","hashOfConfig":"25"},{"size":48,"mtime":1608244872564,"results":"46","hashOfConfig":"25"},{"size":217,"mtime":1608149616753,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"101hxck",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"F:\\CourseraR\\React\\confusion\\src\\reportWebVitals.js",[],["101","102"],"F:\\CourseraR\\React\\confusion\\src\\index.js",[],["103","104"],"F:\\CourseraR\\React\\confusion\\src\\App.js",[],["105","106"],"F:\\CourseraR\\React\\confusion\\src\\components\\MenuComponent.js",[],"F:\\CourseraR\\React\\confusion\\src\\shared\\dishes.js",[],"F:\\CourseraR\\React\\confusion\\src\\components\\DishdetailComponent.js",["107","108","109"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n\tCardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, \r\n\tModalBody, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisModalOpen: false\r\n\t\t};\t\t\r\n\r\n\t\t\tthis.toggleModal = this.toggleModal.bind(this);\r\n\t\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\t}\r\n\r\n\r\n\ttoggleModal(){\r\n\t\tthis.setState({\r\n\t\t\tisModalOpen: !this.state.isModalOpen\r\n\t\t});\r\n\t}\r\n\r\n\thandleSubmit(values){\r\n\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.message);\r\n    }\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<Button outline onClick={this.toggleModal}><span className=\"fa fa-edit fa-lg\"></span>Submit comment</Button>\r\n\t\t\t<Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n\t\t\t\t<ModalHeader toggle={this.toggleModal}>Submit comment</ModalHeader>\r\n\t\t\t\t<ModalBody>\r\n\t\t\t\t\t<LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\t\t\t\t\t\t<Row className=\"formGroup\">\r\n\t\t\t\t\t\t\t<Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"formGroup\">\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Control.select model=\".rating\" name=\"rating\"\r\n\t                                    className=\"form-control\">\r\n\t                                    <option>1</option>\r\n\t                                    <option>2</option>\r\n\t                                    <option>3</option>\r\n\t                                    <option>4</option>\r\n\t                                    <option>5</option>\r\n\t                            </Control.select>\r\n\t                        </Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"formGroup\">\r\n\t\t\t\t\t\t\t<Label htmlFor=\"author\" md={4}>Your Name</Label>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"formGroup\">\r\n\t\t\t\t\t\t\t<Col >\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators= {{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                     />\r\n                                <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Mustbe 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>                            \r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"formGroup\">\r\n                            <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                        </Row>\r\n            \t\t\t<Row className=\"formGroup\">\r\n                            <Col>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                    rows=\"6\"\r\n                                    className=\"form-control\"/>\r\n                            </Col>\r\n                        </Row>\r\n\t\t\t\t\t\t<Row className=\"formGroup\">\r\n                            <Col md={10}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\t\t\t\t\t</LocalForm>\r\n\t\t\t\t</ModalBody>\r\n\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\tfunction RenderDish({dish}) {\r\n\r\n\t\tif(dish!=null) {\r\n\t\t\treturn (\r\n\t\t\t\t<FadeTransform in \r\n\t\t\t\t\ttranformProps = {{\r\n\t\t\t\t\t\texitTransform: 'scale(0.5) translateY(-50%)'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<CardTitle>{dish.name}</CardTitle>\r\n\t\t\t\t\t\t\t\t<CardText>{dish.description}</CardText>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</FadeTransform>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn (<div></div>);\r\n\t}\r\n\r\n\tfunction RenderComments({comments, postComment, dishId}) {\r\n\t\tif (comments != null) {\r\n\t\t\tconsole.log(\"comments=\"+JSON.stringify(comments));\r\n            return(\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                    \t<Stagger in>\r\n\t                        {comments.map((comment) => {\r\n\t                            return(\r\n\t                            \t<Fade in>\r\n\t\t                                <li key={comment.id}>\r\n\t\t\t\t\t                    <p>{comment.comment}</p>\r\n\t\t\t\t\t                    <p>-- {comment.author},\r\n\t\t\t\t\t                    &nbsp;\r\n\t\t\t\t\t                    {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n\t\t\t\t\t                    </p>\r\n\t\t\t\t\t                \t</li>\r\n\t\t\t\t                \t</Fade>\r\n\t                            );\r\n\t                        })}\r\n                        </Stagger>\r\n                     </ul>\r\n                     <CommentForm dishId={dishId} postComment={postComment}/>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n\t}\r\n\t\r\n\tconst DishDetail = (props) =>{\r\n\t\tif(props.isLoading){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if(props.errMess){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<h4>{props.errMess}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if(props.dish != null) {\r\n\t\t\treturn(\r\n\t\t\t\t<div className = \"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<Breadcrumb>\r\n\t\t\t\t\t\t\t<BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n\t\t\t\t\t\t\t<BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n\t\t\t\t\t\t</Breadcrumb>\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t<h3>{props.dish.name}</h3>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"row\">\r\n\t\t\t\t\t\t<div className = \"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t\t\t<RenderDish dish = {props.dish}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = \"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t\t\t<RenderComments comments = {props.comments}\r\n\t\t\t\t\t\t\t postComment={props.postComment}\r\n\t        \t\t\t\t dishId={props.dish.id}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn(\r\n\t\t\t\t<div></div>\r\n\t\t\t);\r\n\t}\r\n\r\n\r\nexport default DishDetail;","F:\\CourseraR\\React\\confusion\\src\\components\\MainComponent.js",[],"F:\\CourseraR\\React\\confusion\\src\\components\\HeaderComponent.js",[],["110","111"],"F:\\CourseraR\\React\\confusion\\src\\components\\FooterComponent.js",[],"F:\\CourseraR\\React\\confusion\\src\\components\\HomeComponent.js",[],"F:\\CourseraR\\React\\confusion\\src\\shared\\leaders.js",[],"F:\\CourseraR\\React\\confusion\\src\\components\\ContactComponent.js",["112","113","114","115","116","117","118","119"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is:\"+ JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                 <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send us your feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"formGroup\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"\r\n                                    validators= {{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                     />\r\n                                <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Mustbe 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"formGroup\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators= {{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                     />\r\n                                <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Mustbe 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"formGroup\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                    placeholder=\"Tel. Number\"\r\n                                    className=\"form-control\"\r\n                                    validators= {{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                    />\r\n                                <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Mustbe 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"formGroup\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators= {{\r\n                                        required, validEmail\r\n                                    }}\r\n                                    />\r\n                                <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid email address'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"formGroup\">\r\n                            <Col md={{size: 6, offset: 2}}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\"\r\n                                            /> {''}\r\n                                            <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                            </Col>\r\n                             <Col md={{size: 3, offset: 1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"formGroup\">\r\n                            <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                    rows=\"12\"\r\n                                    className=\"form-control\"/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"formGroup\">\r\n                            <Col md={{size:10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Contact;",["120","121"],"F:\\CourseraR\\React\\confusion\\src\\components\\AboutComponent.js",[],"F:\\CourseraR\\React\\confusion\\src\\redux\\configureStore.js",[],"F:\\CourseraR\\React\\confusion\\src\\redux\\leaders.js",[],"F:\\CourseraR\\React\\confusion\\src\\redux\\comments.js",[],"F:\\CourseraR\\React\\confusion\\src\\redux\\dishes.js",[],"F:\\CourseraR\\React\\confusion\\src\\redux\\promotions.js",[],"F:\\CourseraR\\React\\confusion\\src\\redux\\ActionTypes.js",[],"F:\\CourseraR\\React\\confusion\\src\\redux\\ActionCreators.js",[],"F:\\CourseraR\\React\\confusion\\src\\redux\\forms.js",[],"F:\\CourseraR\\React\\confusion\\src\\shared\\baseUrl.js",[],"F:\\CourseraR\\React\\confusion\\src\\components\\LoadingComponent.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"122","replacedBy":"128"},{"ruleId":"124","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":53,"column":9,"nodeType":"132","endLine":54,"endColumn":63},{"ruleId":"130","severity":1,"message":"133","line":68,"column":33,"nodeType":"132","endLine":74,"endColumn":40},{"ruleId":"130","severity":1,"message":"134","line":92,"column":33,"nodeType":"132","endLine":94,"endColumn":63},{"ruleId":"122","replacedBy":"135"},{"ruleId":"124","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":63,"column":25,"nodeType":"132","endLine":63,"endColumn":67},{"ruleId":"130","severity":1,"message":"133","line":77,"column":33,"nodeType":"132","endLine":83,"endColumn":40},{"ruleId":"130","severity":1,"message":"133","line":99,"column":33,"nodeType":"132","endLine":105,"endColumn":40},{"ruleId":"130","severity":1,"message":"133","line":121,"column":33,"nodeType":"132","endLine":127,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":144,"column":33,"nodeType":"132","endLine":150,"endColumn":39},{"ruleId":"130","severity":1,"message":"139","line":166,"column":41,"nodeType":"132","endLine":168,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":174,"column":33,"nodeType":"132","endLine":175,"endColumn":62},{"ruleId":"130","severity":1,"message":"134","line":184,"column":33,"nodeType":"132","endLine":186,"endColumn":63},{"ruleId":"122","replacedBy":"140"},{"ruleId":"124","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],["142"],["143"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["142"],["143"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["142"],["143"],"no-global-assign","no-unsafe-negation"]